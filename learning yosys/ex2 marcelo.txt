# Reads the Verilog file 'Trojan1.v' into Yosys. This is where your circuit's description is loaded.
read_verilog Trojan1.v

---

# Performs a series of synthesis optimizations. The '-flatten' option
# flattens the design hierarchy, inlining all modules into a single netlist
# for more aggressive global optimizations.
synth -flatten

---

# Converts asynchronous set/reset inputs of flip-flops to synchronous equivalents.
# This is often necessary as many target hardware libraries prefer synchronous DFFs.
async2sync

---

# Unmaps technology-specific flip-flops back to generic D-type flip-flops.
# This prepares the netlist for tools like ABC, which work best with generic
# sequential elements rather than pre-mapped library cells.
dffunmap

---

# Invokes the ABC tool for advanced logic optimization and technology-independent mapping.
# The '-g aig' option instructs ABC to output the optimized logic as an
# And-Inverter Graph (AIG), a compact representation of Boolean functions.
abc -g aig

---

# Maps the AIG (And-Inverter Graph) generated by ABC back into Yosys's
# internal netlist format. This allows Yosys to continue processing the
# optimized design.
aigmap

---

# Writes the final, optimized netlist into an AIGER (And-Inverter Graph) file.
# The '-ascii' option ensures the output file is human-readable.
# The output file will be named 'Trojan1.aag'.
write_aiger -ascii Trojan1.aag